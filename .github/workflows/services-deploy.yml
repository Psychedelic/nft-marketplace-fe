name: Services deploy

on:
  pull_request:
    types: [closed]
    branches:
      - staging
  push:
    branches:
      - staging

  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    env:
      CI: 1
      DEBUG: 0
      DFX_VERSION: 0.9.2
      DFX_WARNING: -version_check
      NODE_ENV: ci
      DFX_CANDID_RELEASE: 2022-01-06

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Cache Rust
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          default: true
          override: true
          target: wasm32-unknown-unknown

      - name: Adds ic-cdk-optimizer
        run: |
          cd ./.bin/stable-x86_64-unknown-linux-gnu
          gzip -d ic-cdk-optimizer.gz
          cp ic-cdk-optimizer /usr/local/bin

      - name: Cache Dfx
        id: cache-dfx
        uses: actions/cache@v2
        with:
          path: |
            /usr/local/bin/dfx
          key: cache-dfx-${{ hashFiles('nft-marketplace/dfx.json') }}

      - name: Install DFX
        if: steps.cache-dfx.outputs.cache-hit != 'true'
        run: |
          yes Y | DFX_VERSION="$DFX_VERSION" sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"

      - name: Setup DFX Identity
        run: |
          .scripts/deploy/dfx-identity.sh
